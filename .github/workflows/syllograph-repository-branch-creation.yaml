on:
  workflow_call:
    inputs:
      organization_name:
        type: string
        required: true
      product_name:
        type: string
        required: true
      skip_linting:
        type: boolean
        default: false
        required: false
      skip_testing:
        type: boolean
        default: false
        required: false
      organization_name_abbreviation_length:
        type: string
        required: false
        default: 6
      product_name_abbreviation_length:
        type: string
        required: false
        default: 6
      branch_name_abbreviation_length:
        type: string
        required: false
        default: 15
      timezone:
        type: string
        default: Europe/Rome
        required: false
      region:
        type: string
        default: eu-central-1
        required: false
    secrets:
      AWS_SYLLOGRAPH_ROLE_ARN:
        required: true
      EFSW_GITHUB_TOKEN:
        required: true
      EFSW_NPM_GITHUB_REGISTRY_TOKEN:
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  generate-resources-names:
    name: Computation of the names for all the resources generated by the workflow
    runs-on: ubuntu-18.04
    outputs:
      plugin_name: ${{ steps.resource_names_generation.outputs.plugin_name }}
      branch_type: ${{ steps.resource_names_generation.outputs.branch_type }}
      branch_name: ${{ steps.resource_names_generation.outputs.branch_name }}
      environment_name: ${{ steps.resource_names_generation.outputs.environment_name }}
      branch_name_abbreviation: ${{ steps.resource_names_generation.outputs.branch_name_abbreviation }}
      product_name_abbreviation: ${{ steps.resource_names_generation.outputs.product_name_abbreviation }}
      organization_name_abbreviation: ${{ steps.resource_names_generation.outputs.organization_name_abbreviation }}
      plugin_target_reference_name: ${{ steps.resource_names_generation.outputs.plugin_target_reference_name }}
      project_artifacts_bucket_name: ${{ steps.resource_names_generation.outputs.project_artifacts_bucket_name }}
      cloudformation_bucket_name: ${{ steps.resource_names_generation.outputs.cloudformation_bucket_name }}
      cloudformation_stack_name: ${{ steps.resource_names_generation.outputs.cloudformation_stack_name }}
      microservice_cloudformation_stack_lifecycle_artifact_name: ${{ steps.resource_names_generation.outputs.microservice_cloudformation_stack_lifecycle_artifact_name }}
      project_distribution_artifact_name: ${{ steps.resource_names_generation.outputs.project_distribution_artifact_name }}
      distribution_name_hash: ${{ steps.resource_names_generation.outputs.distribution_name_hash }}
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - id: resource_names_generation
        name: Computing the names of the resources
        uses: ./syllograph/.github/actions/syllograph-generate-resources-names
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          organization_name: ${{ inputs.organization_name }}
          product_name: ${{ inputs.product_name }}
          organization_name_abbreviation_length: ${{ inputs.organization_name_abbreviation_length }}
          product_name_abbreviation_length: ${{ inputs.product_name_abbreviation_length }}
          branch_name_abbreviation_length: ${{ inputs.branch_name_abbreviation_length }}
          timezone: ${{ inputs.timezone }}

  # build-microservices-sourcecode:
  #   name: Building the source code of the microservices
  #   needs: generate-resources-names
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Cloning the repository
  #       uses: actions/checkout@v2
  #     - uses: actions/checkout@v2
  #       with:
  #         repository: efsw/syllograph
  #         ref: v1.1.0
  #         token: ${{ secrets.EFSW_GITHUB_TOKEN }}
  #         path: syllograph
  #     - name: Building the source code of the microservices and uploading the artifacts
  #       uses: ./syllograph/.github/actions/syllograph-build-microservices
  #       with:
  #         efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
  #         microservice_cloudformation_stack_lifecycle_artifact_name: ${{ needs.generate-resources-names.outputs.microservice_cloudformation_stack_lifecycle_artifact_name }}

  deploy-cloudformation-stack:
    name: Deploying of the AWS Cloudformation stack
    runs-on: ubuntu-18.04
    needs:
      - generate-resources-names
      # - build-microservices-sourcecode
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - name: Setting up the AWS CLI
        uses: ./syllograph/.github/actions/syllograph-setup-aws-cli
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          aws_role_arn: ${{ secrets.AWS_SYLLOGRAPH_ROLE_ARN }}
          aws_region: ${{ inputs.region }}
      - name: Deploying the CloudFormation templates
        uses: ./syllograph/.github/actions/syllograph-deploy-cloudformation-templates
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          organization_name: ${{ needs.generate-resources-names.outputs.organization_name }}
          organization_name_abbreviation: ${{ needs.generate-resources-names.outputs.organization_name_abbreviation }}
          product_name: ${{ needs.generate-resources-names.outputs.product_name }}
          product_name_abbreviation: ${{ needs.generate-resources-names.outputs.product_name_abbreviation }}
          branch_name: ${{ needs.generate-resources-names.outputs.branch_name }}
          branch_name_abbreviation: ${{ needs.generate-resources-names.outputs.branch_name_abbreviation }}
          project_artifacts_bucket_name: ${{ needs.generate-resources-names.outputs.project_artifacts_bucket_name }}
          cloudformation_bucket_name: ${{ needs.generate-resources-names.outputs.cloudformation_bucket_name }}
          cloudformation_stack_name: ${{ needs.generate-resources-names.outputs.cloudformation_stack_name }}
          distribution_name_hash: ${{ needs.generate-resources-names.outputs.distribution_name_hash }}
          # microservice_cloudformation_stack_lifecycle_artifact_name: ${{ needs.generate-resources-names.outputs.microservice_cloudformation_stack_lifecycle_artifact_name }}

  
  lint-project-sourcecode:
    name: Linting the source code of the project
    runs-on: ubuntu-18.04
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - name: Setting up the NodeJS environment
        uses: ./syllograph/.github/actions/syllograph-setup-node-environment
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          efsw_npm_github_registry_token: ${{ secrets.EFSW_NPM_GITHUB_REGISTRY_TOKEN }}
      - name: Switching project plugin
        uses: ./syllograph/.github/actions/syllograph-switch-project-plugin
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
      - name: Linting the source code
        run: yarn run lint --max-warnings 1000 # TODO: refactor as a parameter

  test-project-sourcecode:
    name: Testing the source code of the project
    runs-on: ubuntu-18.04
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - name: Setting up the NodeJS environment
        uses: ./syllograph/.github/actions/syllograph-setup-node-environment
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          efsw_npm_github_registry_token: ${{ secrets.EFSW_NPM_GITHUB_REGISTRY_TOKEN }}
      - name: Switching project plugin
        uses: ./syllograph/.github/actions/syllograph-switch-project-plugin
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
      - name: Testing the source code
        run: yarn run test --ci --passWithNoTests
  
  build-project-sourcecode:
    name: Building the source code of the project
    runs-on: ubuntu-18.04
    needs: [generate-resources-names, lint-project-sourcecode, test-project-sourcecode]
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - name: Building the source code of the project and uploading the artifacts
        uses: ./syllograph/.github/actions/syllograph-build-project
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          efsw_npm_github_registry_token: ${{ secrets.EFSW_NPM_GITHUB_REGISTRY_TOKEN }}
          project_distribution_artifact_name: ${{ needs.generate-resources-names.outputs.project_distribution_artifact_name }}
          plugin_name: ${{ needs.generate-resources-names.outputs.plugin_name }}
          plugin_target_reference_name: ${{ needs.generate-resources-names.outputs.plugin_target_reference_name }}
          environment_name: ${{ needs.generate-resources-names.outputs.environment_name }}

  upload-project-artifacts:
    name: Uploading the artifacts generated building the project
    runs-on: ubuntu-18.04
    needs: [generate-resources-names, build-project-sourcecode, deploy-cloudformation-stack]
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - name: Downloading the generated artifacts of the project
        uses: actions/download-artifact@master
        with:
          name: ${{ needs.generate-resources-names.outputs.project_distribution_artifact_name }}
          path: build
      - name: Setting up the AWS CLI
        uses: ./syllograph/.github/actions/syllograph-setup-aws-cli
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          aws_role_arn: ${{ secrets.AWS_SYLLOGRAPH_ROLE_ARN }}
          aws_region: ${{ inputs.region }}
      - name: Uploading the generated artifacts of the project
        run: aws s3 sync build s3://${{ needs.generate-resources-names.outputs.project_artifacts_bucket_name }}

  invalidate-cloudfront-distribution:
    name: Invalidating the cache of the CloudFront distribution
    needs: [generate-resources-names, upload-project-artifacts]
    runs-on: ubuntu-18.04
    steps:
      - name: Cloning the repository
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: efsw/syllograph
          ref: v1.1.0
          token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          path: syllograph
      - name: Setting up the AWS CLI
        uses: ./syllograph/.github/actions/syllograph-setup-aws-cli
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          aws_role_arn: ${{ secrets.AWS_SYLLOGRAPH_ROLE_ARN }}
          aws_region: ${{ inputs.region }}
      - name: Invalidating the CloudFront distribution
        uses: ./syllograph/.github/actions/syllograph-invalidate-cloudfront-distribution
        with:
          efsw_github_token: ${{ secrets.EFSW_GITHUB_TOKEN }}
          cloudformation_stack_name: ${{ needs.generate-resources-names.outputs.cloudformation_stack_name }}
